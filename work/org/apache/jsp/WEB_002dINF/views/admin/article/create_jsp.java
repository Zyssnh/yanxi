/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.40
 * Generated at: 2018-03-22 08:22:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin.article;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class create_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/commons/global.jsp", Long.valueOf(1521004094000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      if (_jspx_meth_c_005fset_005f2(_jspx_page_context))
        return;
      out.write("<div>\n");
      out.write("    <h1>完整demo</h1>\n");
      out.write("    <form id=\"articleSaveForm\" method=\"post\">\n");
      out.write("        <script id=\"editor\" name=\"content\" type=\"text/plain\" style=\"width:1024px;height:500px;\"></script>\n");
      out.write("        <div style=\"margin: 10px;\">\n");
      out.write("            <button type=\"submit\" style=\"padding: 5px 12px;\">\n");
      out.write("                <i class=\"glyphicon glyphicon-floppy-disk\"> </i>&nbsp;保存\n");
      out.write("            </button>\n");
      out.write("        </div>\n");
      out.write("    </form>\n");
      out.write("</div>\n");
      out.write("<div id=\"btns\">\n");
      out.write("    <div>\n");
      out.write("        <button onclick=\"getAllHtml()\">获得整个html的内容</button>\n");
      out.write("        <button onclick=\"getContent()\">获得内容</button>\n");
      out.write("        <button onclick=\"setContent()\">写入内容</button>\n");
      out.write("        <button onclick=\"setContent(true)\">追加内容</button>\n");
      out.write("        <button onclick=\"getContentTxt()\">获得纯文本</button>\n");
      out.write("        <button onclick=\"getPlainTxt()\">获得带格式的纯文本</button>\n");
      out.write("        <button onclick=\"hasContent()\">判断是否有内容</button>\n");
      out.write("        <button onclick=\"setFocus()\">使编辑器获得焦点</button>\n");
      out.write("        <button onmousedown=\"isFocus(event)\">编辑器是否获得焦点</button>\n");
      out.write("        <button onmousedown=\"setblur(event)\" >编辑器失去焦点</button>\n");
      out.write("    </div>\n");
      out.write("    <div>\n");
      out.write("        <button onclick=\"getText()\">获得当前选中的文本</button>\n");
      out.write("        <button onclick=\"insertHtml()\">插入给定的内容</button>\n");
      out.write("        <button id=\"enable\" onclick=\"setEnabled()\">可以编辑</button>\n");
      out.write("        <button onclick=\"setDisabled()\">不可编辑</button>\n");
      out.write("        <button onclick=\" UE.getEditor('editor').setHide()\">隐藏编辑器</button>\n");
      out.write("        <button onclick=\" UE.getEditor('editor').setShow()\">显示编辑器</button>\n");
      out.write("        <button onclick=\" UE.getEditor('editor').setHeight(300)\">设置高度为300默认关闭了自动长高</button>\n");
      out.write("    </div>\n");
      out.write("    <div>\n");
      out.write("        <button onclick=\"getLocalData()\" >获取草稿箱内容</button>\n");
      out.write("        <button onclick=\"clearLocalData()\" >清空草稿箱</button>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("<div>\n");
      out.write("    <button onclick=\"createEditor()\">\n");
      out.write("    创建编辑器</button>\n");
      out.write("    <button onclick=\"deleteEditor()\">\n");
      out.write("    删除编辑器</button>\n");
      out.write("</div>\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/ueditor/ueditor.config.js\"></script>\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/ueditor/ueditor.all.min.js\"> </script>\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/ueditor/lang/zh-cn/zh-cn.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("    $(function(){\n");
      out.write("        $('#articleSaveForm').form({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/article/save\",\n");
      out.write("            onSubmit : function() {\n");
      out.write("                progressLoad();\n");
      out.write("                UE.getEditor('editor').sync();\n");
      out.write("                return true;\n");
      out.write("            },\n");
      out.write("            success:function(result){\n");
      out.write("                progressClose();\n");
      out.write("                result = $.parseJSON(result);\n");
      out.write("                if (result.success) {\n");
      out.write("                    showMsg(\"保存成功\");\n");
      out.write("                }else{\n");
      out.write("                    showMsg(\"保存失败\");\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    //实例化编辑器\n");
      out.write("    //建议使用工厂方法getEditor创建和引用编辑器实例，如果在某个闭包下引用该编辑器，直接调用UE.getEditor('editor')就能拿到相关的实例\n");
      out.write("    var ue = UE.getEditor('editor');\n");
      out.write("    function isFocus(e){\n");
      out.write("        alert(UE.getEditor('editor').isFocus());\n");
      out.write("        UE.dom.domUtils.preventDefault(e)\n");
      out.write("    }\n");
      out.write("    function setblur(e){\n");
      out.write("        UE.getEditor('editor').blur();\n");
      out.write("        UE.dom.domUtils.preventDefault(e)\n");
      out.write("    }\n");
      out.write("    function insertHtml() {\n");
      out.write("        var value = prompt('插入html代码', '');\n");
      out.write("        UE.getEditor('editor').execCommand('insertHtml', value)\n");
      out.write("    }\n");
      out.write("    function createEditor() {\n");
      out.write("        enableBtn();\n");
      out.write("        UE.getEditor('editor');\n");
      out.write("    }\n");
      out.write("    function getAllHtml() {\n");
      out.write("        alert(UE.getEditor('editor').getAllHtml())\n");
      out.write("    }\n");
      out.write("    function getContent() {\n");
      out.write("        var arr = [];\n");
      out.write("        arr.push(\"使用editor.getContent()方法可以获得编辑器的内容\");\n");
      out.write("        arr.push(\"内容为：\");\n");
      out.write("        arr.push(UE.getEditor('editor').getContent());\n");
      out.write("        alert(arr.join(\"\\n\"));\n");
      out.write("    }\n");
      out.write("    function getPlainTxt() {\n");
      out.write("        var arr = [];\n");
      out.write("        arr.push(\"使用editor.getPlainTxt()方法可以获得编辑器的带格式的纯文本内容\");\n");
      out.write("        arr.push(\"内容为：\");\n");
      out.write("        arr.push(UE.getEditor('editor').getPlainTxt());\n");
      out.write("        alert(arr.join('\\n'))\n");
      out.write("    }\n");
      out.write("    function setContent(isAppendTo) {\n");
      out.write("        var arr = [];\n");
      out.write("        arr.push(\"使用editor.setContent('欢迎使用ueditor')方法可以设置编辑器的内容\");\n");
      out.write("        UE.getEditor('editor').setContent('欢迎使用ueditor', isAppendTo);\n");
      out.write("        alert(arr.join(\"\\n\"));\n");
      out.write("    }\n");
      out.write("    function setDisabled() {\n");
      out.write("        UE.getEditor('editor').setDisabled('fullscreen');\n");
      out.write("        disableBtn(\"enable\");\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function setEnabled() {\n");
      out.write("        UE.getEditor('editor').setEnabled();\n");
      out.write("        enableBtn();\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function getText() {\n");
      out.write("        //当你点击按钮时编辑区域已经失去了焦点，如果直接用getText将不会得到内容，所以要在选回来，然后取得内容\n");
      out.write("        var range = UE.getEditor('editor').selection.getRange();\n");
      out.write("        range.select();\n");
      out.write("        var txt = UE.getEditor('editor').selection.getText();\n");
      out.write("        alert(txt)\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function getContentTxt() {\n");
      out.write("        var arr = [];\n");
      out.write("        arr.push(\"使用editor.getContentTxt()方法可以获得编辑器的纯文本内容\");\n");
      out.write("        arr.push(\"编辑器的纯文本内容为：\");\n");
      out.write("        arr.push(UE.getEditor('editor').getContentTxt());\n");
      out.write("        alert(arr.join(\"\\n\"));\n");
      out.write("    }\n");
      out.write("    function hasContent() {\n");
      out.write("        var arr = [];\n");
      out.write("        arr.push(\"使用editor.hasContents()方法判断编辑器里是否有内容\");\n");
      out.write("        arr.push(\"判断结果为：\");\n");
      out.write("        arr.push(UE.getEditor('editor').hasContents());\n");
      out.write("        alert(arr.join(\"\\n\"));\n");
      out.write("    }\n");
      out.write("    function setFocus() {\n");
      out.write("        UE.getEditor('editor').focus();\n");
      out.write("    }\n");
      out.write("    function deleteEditor() {\n");
      out.write("        disableBtn();\n");
      out.write("        UE.getEditor('editor').destroy();\n");
      out.write("    }\n");
      out.write("    function disableBtn(str) {\n");
      out.write("        var div = document.getElementById('btns');\n");
      out.write("        var btns = UE.dom.domUtils.getElementsByTagName(div, \"button\");\n");
      out.write("        for (var i = 0, btn; btn = btns[i++];) {\n");
      out.write("            if (btn.id == str) {\n");
      out.write("                UE.dom.domUtils.removeAttributes(btn, [\"disabled\"]);\n");
      out.write("            } else {\n");
      out.write("                btn.setAttribute(\"disabled\", \"true\");\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    function enableBtn() {\n");
      out.write("        var div = document.getElementById('btns');\n");
      out.write("        var btns = UE.dom.domUtils.getElementsByTagName(div, \"button\");\n");
      out.write("        for (var i = 0, btn; btn = btns[i++];) {\n");
      out.write("            UE.dom.domUtils.removeAttributes(btn, [\"disabled\"]);\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function getLocalData () {\n");
      out.write("        alert(UE.getEditor('editor').execCommand( \"getlocaldata\" ));\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function clearLocalData () {\n");
      out.write("        UE.getEditor('editor').execCommand( \"clearlocaldata\" );\n");
      out.write("        alert(\"已清空草稿箱\")\n");
      out.write("    }\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f0.setParent(null);
    // /commons/global.jsp(9,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setVar("ctxPath");
    // /commons/global.jsp(9,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/commons/global.jsp(9,0) '${pageContext.request.contextPath}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
    if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f1.setParent(null);
    // /commons/global.jsp(11,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setVar("path");
    // /commons/global.jsp(11,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/commons/global.jsp(11,0) '${ctxPath}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${ctxPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
    if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f2 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f2.setParent(null);
    // /commons/global.jsp(13,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f2.setVar("staticPath");
    // /commons/global.jsp(13,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f2.setValue(new org.apache.jasper.el.JspValueExpression("/commons/global.jsp(13,0) '${ctxPath}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${ctxPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int _jspx_eval_c_005fset_005f2 = _jspx_th_c_005fset_005f2.doStartTag();
    if (_jspx_th_c_005fset_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f2);
    return false;
  }
}
